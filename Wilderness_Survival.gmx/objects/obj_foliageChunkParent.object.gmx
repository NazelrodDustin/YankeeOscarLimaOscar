<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_pixle</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Init.

image_xscale = obj_worldGen.chunkSize;
image_yscale = obj_worldGen.chunkSize;
chunksActivated = 0;


</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Generate foliage

chunkWidth = obj_worldGen.chunkSize;
chunkHeight = obj_worldGen.chunkSize;
foliageAmount = irandom_range(obj_worldGen.foliageDensity / 2, obj_worldGen.foliageDensity * 2);
foliageType = obj_tree;
chunkGenerated = 0;

//Array to hold all the foliage
foliageArray[0,0] = foliageType; //The foliage object index
foliageArray[0,1] = 0; // x position 
foliageArray[0,2] = 0; // y position 
foliageArray[0,3] = -4; //The foliage instance id

//Randomize the chances of each foliage type spawning in a chunk
var foliageList = ds_list_create();

//Put trees into the list
var treeRange = irandom_range(10, 15);
repeat (treeRange){
    ds_list_add(foliageList, obj_tree);    
}

//Put bushes into the list
var bushRange = irandom_range(5,8);
repeat (bushRange){
    ds_list_add(foliageList,obj_bush);    
}

//Put rocks into the list
var rockRange = irandom_range(3,6);
repeat (bushRange){
    ds_list_add(foliageList,obj_rock);    
}

//Generate the foliage and init the array
if (distance_to_object(instance_nearest(x,y,obj_player)) &lt;= chunkWidth * 1.5){
    for (i = 0; i &lt;= foliageAmount; i++){
        ds_list_shuffle(foliageList);
        foliageType = ds_list_find_value(foliageList, 0);
        foliageArray[i,0] = foliageType;
        foliageArray[i,1] = irandom(chunkWidth);
        foliageArray[i,2] = irandom(chunkHeight);
        foliageArray[i,3] = instance_create(x + foliageArray[i,1],y + foliageArray[i,2],foliageType);   
    }
    chunkGenerated = 1;
}else{
    for (i = 0; i &lt;= foliageAmount; i++){
        ds_list_shuffle(foliageList);
        foliageType = ds_list_find_value(foliageList, 0);
        foliageArray[i,0] = foliageType;
        foliageArray[i,1] = irandom(chunkWidth);
        foliageArray[i,2] = irandom(chunkHeight);
        foliageArray[i,3] = -4;
    }
    instance_deactivate_object(id);
}

//Clear the ds list for the foliage
ds_list_clear(foliageList);




</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Generate water
/*if (irandom(50) == 1){
    hasLake = 1;
    randomize();
    lakeSeed = random_get_seed();
    lakeX = irandom(chunkWidth)
    lakeY = irandom(chunkHeight)
    myLake = instance_create(x + lakeX, y + lakeY, obj_waterSeedLarge); 
    myLake.lakeSeed = lakeSeed;
    random_set_seed(lakeSeed);
    myLake.myChunk = id;
    lakeSpawned = 1;
}else{
    hasLake = 0;
    lakeSpawned = 0;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Spawning/despawning the chunk



//If both players are out of range of the chunk, despawn the chunk
var nearestPlayer = instance_nearest(x + (chunkWidth / 2), y + (chunkHeight / 2), obj_player);
   
if (!chunkGenerated){
    if (scr_distanceFromPointToPoint(nearestPlayer.x,nearestPlayer.y,x + (chunkWidth / 2), y + (chunkHeight / 2)) &lt;= (chunkWidth * 1.4)){
        scr_spawnChunk();
        chunkGenerated = 1;    
    }   
}else{
    if (scr_distanceFromPointToPoint(nearestPlayer.x,nearestPlayer.y,x + (chunkWidth / 2), y + (chunkHeight / 2)) &gt;= (chunkWidth * 1.4)){
        scr_despawnChunk();
        chunkGenerated = 0; 
        instance_deactivate_object(id);   
    }       
} 

if (!chunkGenerated){
    instance_deactivate_object(id);
}
    
    









/*if (hasLake &amp;&amp; !lakeSpawned &amp;&amp; distance_to_object(obj_player) &lt;= chunkWidth * 3){
    if (!lakeSpawned){
        random_set_seed(lakeSeed);
        myLake = instance_create(x + lakeX, y + lakeY, obj_waterSeedLarge);
        myLake.lakeSeed = lakeSeed;
        myLake.myChunk = id;
        lakeSpawned = 1;    
    }
}*/

</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Activating chunks

/*var midX = x + (chunkWidth / 2);
var midY = y + (chunkHeight / 2);

if (place_meeting(x,y,obj_player) &amp;&amp; !chunksActivated){
    instance_activate_region(x - (chunkWidth * 2), y - (chunkWidth * 2), chunkWidth * 5, chunkWidth * 5, 1);     
    chunksActivated = 1;
}else if (chunksActivated &amp;&amp; !place_meeting(x,y,obj_player)){
    chunksActivated = 0;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
image_alpha = .3;

draw_self();


</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
